{"remainingRequest":"D:\\kaushik\\retailapp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\kaushik\\retailapp\\node_modules\\ngx-loading\\ngx-loading\\ngx-loading.es5.js","dependencies":[{"path":"D:\\kaushik\\retailapp\\node_modules\\ngx-loading\\ngx-loading\\ngx-loading.es5.js","mtime":1543477268000},{"path":"D:\\kaushik\\retailapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1543286742000},{"path":"D:\\kaushik\\retailapp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1543286706000}],"contextDependencies":[],"result":["import { Component, Inject, Injectable, Input, NgModule, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nvar LoadingConfig = /*@__PURE__*/ (function () {\n    /**\n     * @param {?=} config\n     */\n    function LoadingConfig(config) {\n        if (config === void 0) {\n            config = {};\n        }\n        this.backdropBorderRadius = config.backdropBorderRadius;\n        this.backdropBackgroundColour = config.backdropBackgroundColour;\n        this.fullScreenBackdrop = config.fullScreenBackdrop;\n        this.animationType = config.animationType;\n        this.primaryColour = config.primaryColour;\n        this.secondaryColour = config.secondaryColour;\n        this.tertiaryColour = config.tertiaryColour;\n    }\n    return LoadingConfig;\n}());\nvar ANIMATION_TYPES = {\n    chasingDots: 'chasing-dots',\n    circle: 'sk-circle',\n    circleSwish: 'circleSwish',\n    cubeGrid: 'sk-cube-grid',\n    doubleBounce: 'double-bounce',\n    pulse: 'pulse',\n    rectangleBounce: 'rectangle-bounce',\n    rotatingPlane: 'rotating-plane',\n    threeBounce: 'three-bounce',\n    wanderingCubes: 'wandering-cubes'\n};\nvar LoadingConfigService = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} config\n     */\n    function LoadingConfigService(config) {\n        this.config = config;\n        this.loadingConfig = config || new LoadingConfig();\n    }\n    return LoadingConfigService;\n}());\nvar LoadingComponent = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} loadingConfigService\n     */\n    function LoadingComponent(loadingConfigService) {\n        this.loadingConfigService = loadingConfigService;\n        this.config = new LoadingConfig();\n        this.ANIMATION_TYPES = ANIMATION_TYPES;\n        this.loadingConfig = {\n            animationType: '',\n            backdropBackgroundColour: '',\n            backdropBorderRadius: '',\n            fullScreenBackdrop: false,\n            primaryColour: '',\n            secondaryColour: '',\n            tertiaryColour: ''\n        };\n        this.defaultConfig = {\n            animationType: ANIMATION_TYPES.threeBounce,\n            backdropBackgroundColour: 'rgba(0, 0, 0, 0.3)',\n            backdropBorderRadius: '0px',\n            fullScreenBackdrop: false,\n            primaryColour: '#ffffff',\n            secondaryColour: '#ffffff',\n            tertiaryColour: '#ffffff'\n        };\n    }\n    /**\n     * @return {?}\n     */\n    LoadingComponent.prototype.ngOnInit = function () {\n        for (var /** @type {?} */ option in this.defaultConfig) {\n            if (typeof this.loadingConfig[option] == \"boolean\") {\n                if (this.config[option] != null) {\n                    this.loadingConfig[option] = this.config[option];\n                    continue;\n                }\n                this.loadingConfig[option] = this.loadingConfigService.loadingConfig[option] != null ? this.loadingConfigService.loadingConfig[option] : this.defaultConfig[option];\n            }\n            else {\n                if (this.config[option] != null) {\n                    this.loadingConfig[option] = this.config[option];\n                    continue;\n                }\n                this.loadingConfig[option] = this.loadingConfigService.loadingConfig[option] != null ? this.loadingConfigService.loadingConfig[option] : this.defaultConfig[option];\n            }\n        }\n    };\n    /**\n     * @param {?} animationType\n     * @return {?}\n     */\n    LoadingComponent.prototype.getAnimationType = function (animationType) {\n        var /** @type {?} */ animationTypeSet;\n        switch (animationType) {\n            case ANIMATION_TYPES.chasingDots:\n                animationTypeSet = ANIMATION_TYPES.chasingDots;\n                break;\n            case ANIMATION_TYPES.circle:\n                animationTypeSet = ANIMATION_TYPES.circle;\n                break;\n            case ANIMATION_TYPES.circleSwish:\n                animationTypeSet = ANIMATION_TYPES.circleSwish;\n                break;\n            case ANIMATION_TYPES.cubeGrid:\n                animationTypeSet = ANIMATION_TYPES.cubeGrid;\n                break;\n            case ANIMATION_TYPES.doubleBounce:\n                animationTypeSet = ANIMATION_TYPES.doubleBounce;\n                break;\n            case ANIMATION_TYPES.pulse:\n                animationTypeSet = ANIMATION_TYPES.pulse;\n                break;\n            case ANIMATION_TYPES.rectangleBounce:\n                animationTypeSet = ANIMATION_TYPES.rectangleBounce;\n                break;\n            case ANIMATION_TYPES.rotatingPlane:\n                animationTypeSet = ANIMATION_TYPES.rotatingPlane;\n                break;\n            case ANIMATION_TYPES.threeBounce:\n                animationTypeSet = ANIMATION_TYPES.threeBounce;\n                break;\n            case ANIMATION_TYPES.wanderingCubes:\n                animationTypeSet = ANIMATION_TYPES.wanderingCubes;\n                break;\n            default:\n                animationTypeSet = ANIMATION_TYPES.threeBounce;\n        }\n        return animationTypeSet;\n    };\n    return LoadingComponent;\n}());\nvar LoadingModule = /*@__PURE__*/ (function () {\n    function LoadingModule() {\n    }\n    /**\n     * @param {?} loadingConfig\n     * @return {?}\n     */\n    LoadingModule.forRoot = function (loadingConfig) {\n        return {\n            ngModule: LoadingModule,\n            providers: [{ provide: 'loadingConfig', useValue: loadingConfig }]\n        };\n    };\n    return LoadingModule;\n}());\n/**\n * Generated bundle index. Do not edit.\n */\nexport { LoadingModule, ANIMATION_TYPES, LoadingComponent as ɵb, LoadingConfigService as ɵc };\n//# sourceMappingURL=ngx-loading.es5.js.map\n",null]}